
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonaServicioWS", targetNamespace = "http://servicio/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonaServicioWS {


    /**
     * 
     * @return
     *     returns java.util.List<webservice.Persona>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarTodos", targetNamespace = "http://servicio/", className = "webservice.BuscarTodos")
    @ResponseWrapper(localName = "buscarTodosResponse", targetNamespace = "http://servicio/", className = "webservice.BuscarTodosResponse")
    @Action(input = "http://servicio/PersonaServicioWS/buscarTodosRequest", output = "http://servicio/PersonaServicioWS/buscarTodosResponse")
    public List<Persona> buscarTodos();

    /**
     * 
     * @param arg0
     * @return
     *     returns webservice.Persona
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarPorId", targetNamespace = "http://servicio/", className = "webservice.BuscarPorId")
    @ResponseWrapper(localName = "buscarPorIdResponse", targetNamespace = "http://servicio/", className = "webservice.BuscarPorIdResponse")
    @Action(input = "http://servicio/PersonaServicioWS/buscarPorIdRequest", output = "http://servicio/PersonaServicioWS/buscarPorIdResponse")
    public Persona buscarPorId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "actualizar", targetNamespace = "http://servicio/", className = "webservice.Actualizar")
    @ResponseWrapper(localName = "actualizarResponse", targetNamespace = "http://servicio/", className = "webservice.ActualizarResponse")
    @Action(input = "http://servicio/PersonaServicioWS/actualizarRequest", output = "http://servicio/PersonaServicioWS/actualizarResponse")
    public void actualizar(
        @WebParam(name = "arg0", targetNamespace = "")
        Persona arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "insertar", targetNamespace = "http://servicio/", className = "webservice.Insertar")
    @ResponseWrapper(localName = "insertarResponse", targetNamespace = "http://servicio/", className = "webservice.InsertarResponse")
    @Action(input = "http://servicio/PersonaServicioWS/insertarRequest", output = "http://servicio/PersonaServicioWS/insertarResponse")
    public void insertar(
        @WebParam(name = "arg0", targetNamespace = "")
        Persona arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "eliminar", targetNamespace = "http://servicio/", className = "webservice.Eliminar")
    @ResponseWrapper(localName = "eliminarResponse", targetNamespace = "http://servicio/", className = "webservice.EliminarResponse")
    @Action(input = "http://servicio/PersonaServicioWS/eliminarRequest", output = "http://servicio/PersonaServicioWS/eliminarResponse")
    public void eliminar(
        @WebParam(name = "arg0", targetNamespace = "")
        Persona arg0);

}
